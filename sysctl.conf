# sysctl settings are defined through files in
# /usr/lib/sysctl.d/, /run/sysctl.d/, and /etc/sysctl.d/.
#
# Vendors settings live in /usr/lib/sysctl.d/.
# To override a whole file, create a new file with the same in
# /etc/sysctl.d/ and put new settings there. To override
# only specific settings, add a file with a lexically later
# name in /etc/sysctl.d/ and put new settings there.
#
# For more information, see sysctl.conf(5) and sysctl.d(5).
# See 33069 don't delete this别删这行

#redis need add this
vm.overcommit_memory = 1
vm.swappiness = 0
#关闭ipv6
#net.ipv6.conf.all.disable_ipv6 = 1
#net.ipv6.conf.default.disable_ipv6 = 1
#net.ipv6.conf.lo.disable_ipv6 = 1
#忽略icmp ping广播包，应开启，避免放大攻击
#net.ipv4.icmp_echo_ignore_broadcasts = 1
# 开启恶意icmp错误消息保护
#net.ipv4.icmp_ignore_bogus_error_responses = 1

# 关闭路由转发注意有做有 docker  haproxy upstream要开启 1开启 0关闭
#关闭路由转发 0 关闭 1开启
net.ipv4.ip_forward = 1
#禁止转发重定向报文
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
#file-max是设置 系统所有进程一共可以打开的文件数量 。同时一些程序可以通过setrlimit调用，设置每个进程的限制。如果得到大量使用完文件句柄的错误信息，是应该增加这个值。
fs.file-max = 6553560
#开启反向路径过滤
net.ipv4.conf.all.rp_filter = 0
net.ipv4.conf.default.rp_filter = 0
#开启SYN Cookies
net.ipv4.tcp_syncookies = 1
#处理无源路由的包
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

#关闭sysrq功能 对性能影响不大
kernel.sysrq = 0

#core文件名中添加pid作为扩展名
kernel.core_uses_pid = 1


#修改消息队列长度
kernel.msgmnb = 65536
kernel.msgmax = 65536

#设置最大内存共享段大小bytes
# 68719476736bytes=64 GB
# 4294967296bytes=4 GB
kernel.shmmax = 68719476736
#该参数表示统一一次可以使用的共享内存总量（以页为单位）。默认是2097152bytes（2MB），通常不需要修改。
kernel.shmall = 4294967296

#TIME_WAIT连接数的数量，有的资料显示 180000 默认4096（我当时查的centos7.6）
#如果不是类似 Nginx 之类的中间代理(即不担心端口耗尽)，你通常不用关心这个值，使用官方默认的就好，甚至官方建议在内存大的情况下可以增加这个值。
#类似 Nginx 之类的中间代理一定要关注这个值，因为它对你的系统起到一个保护的作用，一旦端口全部被占用，服务就异常了。 tcp_max_tw_buckets 能帮你降低这种情况的发生概率，争取补救时间。 默认4096
#Ref   https://www.jianshu.com/p/b7e991be0909
net.ipv4.tcp_max_tw_buckets = 55000

#开启tcp_sack
#启用有选择的应答（Selective Acknowledgment），
#这可以通过有选择地应答乱序接收到的报文来提高性能（这样可以让发送者只发送丢失的报文段）；
#（对于广域网通信来说）这个选项应该启用，但是这会增加对 CPU 的占用。
net.ipv4.tcp_sack = 1
#启用tcp_window_scaling
#启用 RFC 1323 定义的 window scaling；要支持超过 64KB 的窗口，必须启用该值
net.ipv4.tcp_window_scaling = 1
#与 tcp_wmem 类似，不过它表示的是为自动调优所使用的接收缓冲区的值。
net.ipv4.tcp_rmem = 4096        87380   4194304
#为自动调优定义每个 socket 使用的内存。
#第一个值是为 socket 的发送缓冲区分配的最少字节数。
#第二个值是默认值（该值会被 wmem_default 覆盖），缓冲区在系统负载不重的情况下可以增长到这个值。
#第三个值是发送缓冲区空间的最大字节数（该值会被 wmem_max 覆盖）。
net.ipv4.tcp_wmem = 4096        16384   4194304
#定义默认的发送窗口大小；对于更大的 BDP 来说，这个大小也应该更大。
net.core.wmem_default = 8388608
#指定了接收套接字缓冲区大小的缺省值（以字节为单位）。
net.core.rmem_default = 8388608
#指定了接收套接字缓冲区大小的最大值（以字节为单位）。
net.core.rmem_max = 16777216
#定义发送窗口的最大大小；对于更大的 BDP 来说，这个大小也应该更大。
net.core.wmem_max = 16777216
#该参数决定了，网络设备接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。
net.core.netdev_max_backlog = 262144
#net.core.somaxconn是Linux中的一个内核(kernel)参数，表示socket监听(listen)的backlog上限。
#该参数的值默认是128
#如果Linux系统中部署了经常处理新请求(request)的高负载的服务，那么显然这个值是需要增加到更合适的值
net.core.somaxconn = 65535
#限制仅仅是为了防止简单的DoS 攻击 最大套接字sockts 一个最大是64k *3276800= 200GB
net.ipv4.tcp_max_orphans = 3276800

#表示SYN队列长度，默认1024，改成8192，可以容纳更多等待连接的网络连接数。
net.ipv4.tcp_max_syn_backlog = 262144
#开启TCP时间戳
#以一种比重发超时更精确的方法（请参阅 RFC 1323）来启用对 RTT 的计算；为了实现更好的性能应该启用这个选项。
net.ipv4.tcp_timestamps = 0

#内核放弃建立连接之前发送SYNACK 包的数量
#TCP三次握手的syn/ack阶段，重试次数，缺省5，设为1
net.ipv4.tcp_synack_retries = 1

#内核放弃建立连接之前发送SYN 包的数量 默认查询为 6
net.ipv4.tcp_syn_retries = 1

#表示开启TCP连接中TIME_WAIT状态的socket快速回收，循环使用，默认为0，表示关闭。
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1
#####################################
#net.ipv4.tcp_mem确定 TCP 栈应该如何反映内存使用；每个值的单位都是内存页（通常是 4KB）。
#第一个值是内存使用的下限。
#第二个值是内存压力模式开始对缓冲区使用应用压力的上限。
#第三个值是内存上限。在这个层次上可以将报文丢弃，从而减少对内存的使用。对于较大的 BDP 可以增大这些值（但是要记住，其单位是内存页，而不是字节）。
net.ipv4.tcp_mem = 524288     699050  1048576
#内存4G 建议使用此条↑
#net.ipv4.tcp_mem = 524288     699050  1048576  
#内存8G建议使用 TCP连接最多约使用4GB内存↑
#net.ipv4.tcp_mem = 94500000 915000000 927000000
#内存256GB 建议↑
#FIN_WAIT状态的TCP连接的超时时间
net.ipv4.tcp_fin_timeout = 1
#当keepalive 起用的时候，TCP 发送keepalive 消息的频度。缺省是2 
net.ipv4.tcp_keepalive_time = 30
#小时

#允许系统打开的端口范围 1025 65000 会报错
net.ipv4.ip_local_port_range = 1024    65535

#修改防火墙表大小，默认65536
#net.netfilter.nf_conntrack_max = 655350
#net.netfilter.nf_conntrack_tcp_timeout_established = 1200

# 确保无人能修改路由表
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv4.conf.default.accept_redirects = 0
#net.ipv4.conf.all.secure_redirects = 0
#net.ipv4.conf.default.secure_redirects = 0

