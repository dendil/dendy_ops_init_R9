user                nginx nginx;
worker_processes    auto;

worker_rlimit_nofile 265535;
error_log  		/opt/nginx_data/logs/error.log  info;
pid        		/opt/nginx_data/logs/nginx.pid;


events {
	use 		epoll;
	worker_connections  65535;
	multi_accept on;
}

stream {                                           #stram模块 和http模块是一同等级；做四层代理时需要添加上这个模块；

log_format proxy '$remote_addr [$time_local] '
                 '$session_time "$upstream_addr" ';
include                 /opt/nginx_data/conf.d/*.stream;
}

http {
	include       	mime.types;
	default_type  	application/octet-stream;
    
    # nginx-module-vts
    vhost_traffic_status_zone;

    client_body_temp_path /opt/nginx_data/temp/client_body_temp  1 2 ;
	fastcgi_temp_path     /opt/nginx_data/temp/fastcgi_temp 1 2;
	proxy_temp_path       /opt/nginx_data/temp/proxy_temp 1 2;
	scgi_temp_path        /opt/nginx_data/temp/scgi_temp_path 1 2;
	uwsgi_temp_path       /opt/nginx_data/temp/uwsgi_temp_path 1 2;
	
	#log_format  main  '$http_x_forwarded_for $remote_addr $remote_user [$time_local] "$request" '
	#                  '$status $body_bytes_sent "$http_referer" '
	#                  '"$http_user_agent" ';
    log_format json  '{"@timestamp":"$time_iso8601",'
                 '"host":"$server_addr",'
                 '"request_method": "$request_method", '
                 '"clientip":"$remote_addr",'
                 '"size":$body_bytes_sent,'
                 '"responsetime":$request_time,'
                 '"upstreamtime":"$upstream_response_time",'
                 '"upstreamhost":"$upstream_addr",'
                 '"http_host":"$host",'
                 '"url":"$uri",'
                 '"domain":"$host",'
                 '"xff":"$http_x_forwarded_for",'
                 '"referer":"$http_referer",'
                 '"tcp_xff":"$proxy_protocol_addr",'
                 '"agent":"$http_user_agent",'
                 '"status":"$status"}';
                           
                           
                        
	
	access_log  /opt/nginx_data/logs/access.log  json;
    #error_log  		logs/error.log  info;
	#log_format access '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent $request_body "$http_referer" "$http_user_agent" $http_x_forwarded_for';
	#log_format access 	'$remote_addr @##$remote_user @##$time_local @##"$request" @##$status @##$body_bytes_sent @##$request_body @##"$http_referer" @##"$http_user_agent" @##$http_x_forwarded_for';
	#access_log  	logs/access.log  access;    
	
	sendfile       	on;
	tcp_nopush     	on;
	tcp_nodelay    	on;
	#keepalive_timeout  0;
	keepalive_timeout  	120;
	server_tokens 	off;
	send_timeout 	15;
	


	open_file_cache 			max=102400 inactive=20s;
	open_file_cache_valid 		30s;
	open_file_cache_min_uses 		1;
	reset_timedout_connection 		on;
	
#######设定请求缓冲#######################
	large_client_header_buffers 	4 256k;
	client_header_buffer_size 		128k;
	client_header_timeout 		5s;
	client_body_buffer_size 		1024k;
	client_body_timeout 		5s;
	client_max_body_size 		16m;
	
	fastcgi_connect_timeout 		300;
	fastcgi_send_timeout 		300;
	fastcgi_read_timeout 		300;
	fastcgi_buffer_size 		64k;
	fastcgi_buffers 			4 64k;
	fastcgi_busy_buffers_size 		128k;
	fastcgi_temp_file_write_size 	128k;
	
	gzip  		on;
	gzip_min_length 	1k;
	gzip_buffers 	4 16k;
	gzip_comp_level 	5;
	gzip_types 		text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	gzip_vary 		off;
	gzip_disable 	"MSIE [1-6]\.";

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $remote_addr $proxy_forwarded_elem {

        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$        "for=$remote_addr";

        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {

        # If the incoming Forwarded header is syntactically valid, append to it
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

        # Otherwise, replace it
        default "$proxy_forwarded_elem";
    }
	#Cross-domain support
	#set $origin '*';
    #if ($http_origin) {
    #    set $origin "$http_origin";
    #    }
	#add_header 'Access-Control-Allow-Origin' "$origin";
	#允许带上cookie请求
	#add_header 'Access-Control-Allow-Credentials' 'true';
	###允许请求的方法，比如 GET/POST/PUT/DELETE
	#add_header 'Access-Control-Allow-Methods' *;
	#add_header 'Access-Control-Allow-Methods' 'GET,POST,HEAD,OPTIONS';
	###允许请求的header
	#add_header 'Access-Control-Allow-Headers' *;
	#add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
    #if ($request_method = OPTIONS){
    #   return 204;
   	#}

	include 		/opt/nginx_data/conf.d/*.conf;
}
